// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: task/task_service.proto

package task

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_task_task_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_task_task_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_task_task_service_proto_rawDescGZIP(), []int{0}
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	IsCompleted   bool                   `protobuf:"varint,5,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_task_task_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_task_task_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_task_task_service_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Task) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateUserTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserTaskRequest) Reset() {
	*x = CreateUserTaskRequest{}
	mi := &file_task_task_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTaskRequest) ProtoMessage() {}

func (x *CreateUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_task_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_task_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserTaskRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateUserTaskRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateUserTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	mi := &file_task_task_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_task_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_task_task_service_proto_rawDescGZIP(), []int{3}
}

func (x *TaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type TasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          []*Task                `protobuf:"bytes,1,rep,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TasksResponse) Reset() {
	*x = TasksResponse{}
	mi := &file_task_task_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TasksResponse) ProtoMessage() {}

func (x *TasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_task_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TasksResponse.ProtoReflect.Descriptor instead.
func (*TasksResponse) Descriptor() ([]byte, []int) {
	return file_task_task_service_proto_rawDescGZIP(), []int{4}
}

func (x *TasksResponse) GetTask() []*Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetUserTaskByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTaskByIDRequest) Reset() {
	*x = GetUserTaskByIDRequest{}
	mi := &file_task_task_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTaskByIDRequest) ProtoMessage() {}

func (x *GetUserTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_task_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*GetUserTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_task_task_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserTaskByIDRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *GetUserTaskByIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteUserTaskByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserTaskByIDRequest) Reset() {
	*x = DeleteUserTaskByIDRequest{}
	mi := &file_task_task_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserTaskByIDRequest) ProtoMessage() {}

func (x *DeleteUserTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_task_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_task_task_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteUserTaskByIDRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *DeleteUserTaskByIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateUserTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TaskId        string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	IsCompleted   bool                   `protobuf:"varint,5,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserTaskRequest) Reset() {
	*x = UpdateUserTaskRequest{}
	mi := &file_task_task_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserTaskRequest) ProtoMessage() {}

func (x *UpdateUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_task_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_task_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUserTaskRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *UpdateUserTaskRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateUserTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateUserTaskRequest) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

type GetUserAllTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAllTaskRequest) Reset() {
	*x = GetUserAllTaskRequest{}
	mi := &file_task_task_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAllTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAllTaskRequest) ProtoMessage() {}

func (x *GetUserAllTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_task_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAllTaskRequest.ProtoReflect.Descriptor instead.
func (*GetUserAllTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_task_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserAllTaskRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetTaskByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskByIDRequest) Reset() {
	*x = GetTaskByIDRequest{}
	mi := &file_task_task_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIDRequest) ProtoMessage() {}

func (x *GetTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_task_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_task_task_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetTaskByIDRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

var File_task_task_service_proto protoreflect.FileDescriptor

const file_task_task_service_proto_rawDesc = "" +
	"\n" +
	"\x17task/task_service.proto\x12\x04task\x1a\x1fgoogle/protobuf/timestamp.proto\"\a\n" +
	"\x05Empty\"\x89\x02\n" +
	"\x04Task\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12!\n" +
	"\fis_completed\x18\x05 \x01(\bR\visCompleted\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"h\n" +
	"\x15CreateUserTaskRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\".\n" +
	"\fTaskResponse\x12\x1e\n" +
	"\x04task\x18\x01 \x01(\v2\n" +
	".task.TaskR\x04task\"/\n" +
	"\rTasksResponse\x12\x1e\n" +
	"\x04task\x18\x01 \x03(\v2\n" +
	".task.TaskR\x04task\"J\n" +
	"\x16GetUserTaskByIDRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"M\n" +
	"\x19DeleteUserTaskByIDRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xa4\x01\n" +
	"\x15UpdateUserTaskRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12!\n" +
	"\fis_completed\x18\x05 \x01(\bR\visCompleted\"0\n" +
	"\x15GetUserAllTaskRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"-\n" +
	"\x12GetTaskByIDRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId2\x9d\x03\n" +
	"\vTaskService\x12A\n" +
	"\x0eCreateUserTask\x12\x1b.task.CreateUserTaskRequest\x1a\x12.task.TaskResponse\x12C\n" +
	"\x0fGetUserTaskByID\x12\x1c.task.GetUserTaskByIDRequest\x1a\x12.task.TaskResponse\x12B\n" +
	"\x0eGetUserAllTask\x12\x1b.task.GetUserAllTaskRequest\x1a\x13.task.TasksResponse\x12;\n" +
	"\vGetTaskByID\x12\x18.task.GetTaskByIDRequest\x1a\x12.task.TaskResponse\x12B\n" +
	"\x12DeleteUserTaskByID\x12\x1f.task.DeleteUserTaskByIDRequest\x1a\v.task.Empty\x12A\n" +
	"\x0eUpdateUserTask\x12\x1b.task.UpdateUserTaskRequest\x1a\x12.task.TaskResponseB\bZ\x06./taskb\x06proto3"

var (
	file_task_task_service_proto_rawDescOnce sync.Once
	file_task_task_service_proto_rawDescData []byte
)

func file_task_task_service_proto_rawDescGZIP() []byte {
	file_task_task_service_proto_rawDescOnce.Do(func() {
		file_task_task_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_task_task_service_proto_rawDesc), len(file_task_task_service_proto_rawDesc)))
	})
	return file_task_task_service_proto_rawDescData
}

var file_task_task_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_task_task_service_proto_goTypes = []any{
	(*Empty)(nil),                     // 0: task.Empty
	(*Task)(nil),                      // 1: task.Task
	(*CreateUserTaskRequest)(nil),     // 2: task.CreateUserTaskRequest
	(*TaskResponse)(nil),              // 3: task.TaskResponse
	(*TasksResponse)(nil),             // 4: task.TasksResponse
	(*GetUserTaskByIDRequest)(nil),    // 5: task.GetUserTaskByIDRequest
	(*DeleteUserTaskByIDRequest)(nil), // 6: task.DeleteUserTaskByIDRequest
	(*UpdateUserTaskRequest)(nil),     // 7: task.UpdateUserTaskRequest
	(*GetUserAllTaskRequest)(nil),     // 8: task.GetUserAllTaskRequest
	(*GetTaskByIDRequest)(nil),        // 9: task.GetTaskByIDRequest
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
}
var file_task_task_service_proto_depIdxs = []int32{
	10, // 0: task.Task.created_at:type_name -> google.protobuf.Timestamp
	10, // 1: task.Task.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: task.TaskResponse.task:type_name -> task.Task
	1,  // 3: task.TasksResponse.task:type_name -> task.Task
	2,  // 4: task.TaskService.CreateUserTask:input_type -> task.CreateUserTaskRequest
	5,  // 5: task.TaskService.GetUserTaskByID:input_type -> task.GetUserTaskByIDRequest
	8,  // 6: task.TaskService.GetUserAllTask:input_type -> task.GetUserAllTaskRequest
	9,  // 7: task.TaskService.GetTaskByID:input_type -> task.GetTaskByIDRequest
	6,  // 8: task.TaskService.DeleteUserTaskByID:input_type -> task.DeleteUserTaskByIDRequest
	7,  // 9: task.TaskService.UpdateUserTask:input_type -> task.UpdateUserTaskRequest
	3,  // 10: task.TaskService.CreateUserTask:output_type -> task.TaskResponse
	3,  // 11: task.TaskService.GetUserTaskByID:output_type -> task.TaskResponse
	4,  // 12: task.TaskService.GetUserAllTask:output_type -> task.TasksResponse
	3,  // 13: task.TaskService.GetTaskByID:output_type -> task.TaskResponse
	0,  // 14: task.TaskService.DeleteUserTaskByID:output_type -> task.Empty
	3,  // 15: task.TaskService.UpdateUserTask:output_type -> task.TaskResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_task_task_service_proto_init() }
func file_task_task_service_proto_init() {
	if File_task_task_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_task_task_service_proto_rawDesc), len(file_task_task_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_task_task_service_proto_goTypes,
		DependencyIndexes: file_task_task_service_proto_depIdxs,
		MessageInfos:      file_task_task_service_proto_msgTypes,
	}.Build()
	File_task_task_service_proto = out.File
	file_task_task_service_proto_goTypes = nil
	file_task_task_service_proto_depIdxs = nil
}
